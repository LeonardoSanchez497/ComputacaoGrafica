package ip1819_;

import java.awt.Container;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;

public class IP1819_ extends JFrame implements ActionListener{

	ImagePanel imgSrc,imgDst;
	JFileChooser fc = new JFileChooser("c:/img");
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		JFrame frame = new IP1819_();
		frame.setTitle("IP1819");
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.pack();
		frame.setVisible(true);
		
		
	}
	
	
	public IP1819_() {
		JMenuBar mb = new JMenuBar();
		setJMenuBar(mb);
		
		JMenu menu = new JMenu ("File");
		
		JMenuItem m1 = new JMenuItem("Open Image");
		m1.addActionListener(this);
		
		
		menu.add(m1);
		m1 = new JMenuItem("Save Image");
		m1.addActionListener(this);
		menu.add(m1);
		m1 = new JMenuItem("Copy Image");
		m1.addActionListener(this);
		menu.add(m1);
		m1 = new JMenuItem("Exit");
		m1.addActionListener(this);
		menu.add(m1);
		
		mb.add(menu);
		
		menu = new JMenu ("Processing");
		m1 = new JMenuItem("RGB to Gray");
		m1.addActionListener(this);
		menu.add(m1);
		m1 = new JMenuItem("RGB to Gray v2");
		m1.addActionListener(this);
		menu.add(m1);
		mb.add(menu);
		
		imgSrc = new ImagePanel();
		imgDst = new ImagePanel();
		Container cp = this.getContentPane();
		cp.setLayout(new FlowLayout());
		cp.add(imgSrc);
		cp.add(imgDst);
		
	}


	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		String cmd = e.getActionCommand();
		
		if ("Open Image".equals(cmd)) {
			int result = fc.showOpenDialog(this);
			if(result == JFileChooser.APPROVE_OPTION) {
				try {
					BufferedImage bi = ImageIO.read(fc.getSelectedFile());
					imgSrc.setImage(bi);
					pack();
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
		}
		else if ("Save Image".equals(cmd)) {
			
			
		}
		else if ("Exit".equals(cmd)) {
			System.exit(0);
		}
	}

}
class ImagePanel extends JPanel{
	BufferedImage image = null;
	
	
	public ImagePanel() {
		setPreferredSize(new Dimension(265,256));
		
	}
	
	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		Graphics2D g2 = (Graphics2D)g;
		
		if (image ==null)
			g2.drawRect(0, 0, getWidth()-1, getHeight()-1);
		else 
			g2.drawImage(image,0,0,this);
		
	}
	public void setImage (BufferedImage bi) {
		image = bi;
		setPreferredSize(new Dimension (bi.getWidth(),bi.getHeight()));
		repaint();
	}
}
